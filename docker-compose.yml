version: '3'
volumes:
  reports:
  data:

services:
  db:
    image: postgres:11
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - MREPORT_DATABASE_NAME
      - MREPORT_DATABASE_USER
      - MREPORT_DATABASE_PWD
      - MREPORT_DATABASE_SCHEMA
    volumes:
      - ./docker/db/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./docker/db/script.sql:/tmp/script.sql
      - data:/var/lib/postgresql/data
    ports:
      - ${MREPORT_DATABASE_LOCALHOST_PORT}:${MREPORT_DATABASE_HOST_PORT}

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile-backend
    image: mviewer/mreport:latest
    environment:
      - MREPORT_DATABASE_HOST
      - MREPORT_DATABASE_HOST_PORT
      - MREPORT_DATABASE_NAME
      - MREPORT_DATABASE_USER
      - MREPORT_DATABASE_PWD
      - MREPORT_DATABASE_SCHEMA
    volumes:
      - "reports:/home/apprunner/backend/reports"
    depends_on:
      - "db"


  frontend:
      image: nginx:1.19
      volumes:
        - "./docker/nginx:/etc/nginx/templates"
        - "reports:/var/www/reports"
        - "./frontend/static/:/var/www/static"
        - "./frontend/templates/:/var/www/templates"
      environment:
        - NGINX_PORT
        - MREPORT_WEB_HOST_PORT
      ports:
        - ${MREPORT_WEB_HOST_PORT}:${NGINX_PORT}
      depends_on:
      - "backend"
